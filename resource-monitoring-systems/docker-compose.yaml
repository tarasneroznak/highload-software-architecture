version: '3.9'

volumes:
  elasticsearch_data: {}
  grafana_data: {}
  influxdb_data: {}

networks:
  monitoring:
    driver: bridge

services:
  nginx:
    container_name: nginx
    image: nginx:1.25-alpine
    volumes:
      - ./nginx:/etc/nginx/conf.d
    expose:
      - 80
    ports:
      - 80:80
    depends_on:
      - api
      - grafana
    networks:
      - monitoring

  api:
    container_name: api
    hostname: api
    image: node:alpine
    environment:
      MONGO_URL: mongodb://mongodb:27017
      ELASTIC_URL: http://elasticsearch:9200
      PORT: 8081
      HOSTNAME: api
    working_dir: /home/app
    restart: always
    volumes:
      - ./app:/home/app
    depends_on:
      - mongodb
      - elasticsearch
    command: [ "node", "server" ]
    networks:
      - monitoring

  grafana:
    hostname: grafana
    container_name: grafana
    image: grafana/grafana:8.0.2
    env_file: configuration.env
    depends_on:
      - influxdb
    links:
      - influxdb
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - monitoring

  mongodb:
    hostname: mongodb
    container_name: mongodb
    image: mongo:6.0
    restart: always
    networks:
      - monitoring

  elasticsearch:
    hostname: elasticsearch
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    networks:
      - monitoring

  telegraf:
    hostname: telegraf
    container_name: telegraf
    image: telegraf:1.18-alpine
    platform: linux/amd64
    user: root
    entrypoint: /bin/bash -c "chmod 666 /var/run/docker.sock && /entrypoint.sh telegraf"
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/rootfs/proc:ro
    depends_on:
      - influxdb
      - mongodb
      - elasticsearch
    links:
      - influxdb
    networks:
      - monitoring

  influxdb:
    hostname: influxdb
    container_name: influxdb
    image: influxdb:1.8-alpine
    platform: linux/amd64
    env_file: configuration.env
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb
    networks:
      - monitoring
