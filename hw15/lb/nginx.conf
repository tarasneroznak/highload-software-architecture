worker_processes 1;

events {
    worker_connections 1024;
}

http {
    log_format lf '$remote_addr, $http_x_forwarded_for, $binary_remote_addr - [$time_local] $allowed_country [$geoip2_metadata_country_build, $geoip2_data_country_iso_code, $geoip2_data_country_name]';

    error_log /usr/local/nginx/logs/error.log;
    access_log /usr/local/nginx/logs/access.log lf;

    geoip2 /var/lib/GeoIP/GeoLite2-Country.mmdb {
        auto_reload 5m;
        $geoip2_metadata_country_build metadata build_epoch;
        $geoip2_data_country_iso_code source=$http_x_forwarded_for country iso_code;
        $geoip2_data_country_name country names en;
    }

    map $geoip2_data_country_iso_code $allowed_country {
        default 0;
        UK 1;
        US 2;
    }

    upstream backend_rest {
        server rest_nginx;
        server backup_nginx backup;

        check interval=5000 rise=1 fall=1 timeout=1000;
    }

    upstream backend_us {
        server us_nginx_1 max_fails=1 fail_timeout=2s;
        server us_nginx_2 max_fails=1 fail_timeout=2s;

        server backup_nginx backup;

        check interval=5000 rise=1 fall=1 timeout=1000;
    }

    upstream backend_uk {
        server uk_nginx;
        server backup_nginx backup;

        check interval=5000 rise=1 fall=1 timeout=1000;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        location / {
            check_status;

            proxy_set_header HTTP_Country-Code $geoip2_data_country_iso_code;
            proxy_pass_request_headers on;
            add_header Content-Type "text/plain";

            if ($allowed_country = 1) {
                proxy_pass http://backend_uk;
            }
            if ($allowed_country = 2) {
                proxy_pass http://backend_us;
            }
            proxy_pass http://backend_rest;

        }
    }
}